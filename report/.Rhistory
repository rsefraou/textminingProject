#summary(x$sentiment)%>%print()
boxplot(x$sentiment)
}
spf<-str_extract_all(sunscreen$productName, "\\d+")%>%
as.data.frame()%>%
t()
sunscreen<-cbind(sunscreen, spf)
#first word cloud to decide stop words
sunscreen_before_cleaning <- sunscreen %>%
mutate(review2 = review) %>%
as.tibble() %>%
unnest_tokens(word, review) %>%
filter(is.na(as.numeric(word)))
sunscreen_cleaned_for_wordcloud <- sunscreen %>%
dplyr::mutate(review2 = review) %>%
as.tibble() %>%
tidytext::unnest_tokens(word, review) %>%
dplyr::anti_join(stop_words, by = "word") %>%
dplyr::anti_join(my_stop_words, by = "word") %>%
dplyr::filter(is.na(as.numeric(word)))
par(mfrow=c(1,1))
#wordcloud
sunscreen_cleaned_for_wordcloud %>%
count(word) %>%
with(wordcloud(word, n, max.words = 20, colors=brewer.pal(8, "Spectral")))
sunscreen_cleaned_for_wordcloud <- sunscreen %>%
dplyr::mutate(review2 = review) %>%
dplyr::group_by(brandName)%>%
as.tibble() %>%
tidytext::unnest_tokens(word, review) %>%
anti_join(stop_words, by = "word") %>%
anti_join(my_stop_words, by = "word") %>%
dplyr::filter(is.na(as.numeric(word)))
par(mfrow=c(3,3))
for( i in c(1:nrow(brands))) {
sunscreen_cleaned_for_wordcloud %>%
dplyr::select(brandName, review2, word)%>%
filter(brandName%>%as.character() == brands$value[i] )%>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, colors=brewer.pal(8, "Spectral")))
}
par(mfrow=c(3,3))
for( i in c(1:nrow(brands))) {
sunscreen_cleaned_for_wordcloud %>%
dplyr::select(brandName, review2, word)%>%
filter(brandName%>%as.character() == brands$value[i] )%>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, colors=brewer.pal(8, "Spectral")))
}
for( i in c(1:length(brands))) {
sunscreen_cleaned_for_wordcloud %>%
dplyr::select(brandName, review2, word)%>%
filter(brandName%>%as.character() == brands$value[i] )%>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, colors=brewer.pal(8, "Spectral")))
}
for(i in brands) {
sunscreen_cleaned_for_wordcloud %>%
dplyr::select(brandName, review2, word)%>%
filter(brandName%>%as.character() == brands$value[i] )%>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, colors=brewer.pal(8, "Spectral")))
}
for(i in brands) {
sunscreen_cleaned_for_wordcloud %>%
dplyr::select(brandName, review2, word)%>%
filter(brandName%>%as.character() == brands[i] )%>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, colors=brewer.pal(8, "Spectral")))
}
brands[i]
brands[1]
for(i in brands) {
sunscreen_cleaned_for_wordcloud %>%
dplyr::select(brandName, review2, word)%>%
filter(brandName == brands[i] )%>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, colors=brewer.pal(8, "Spectral")))
}
for(i in brands) {
sunscreen_cleaned_for_wordcloud %>%
dplyr::select(brandName, word)%>%
filter(brandName == i )%>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, colors=brewer.pal(8, "Spectral")))
}
for(i in brands) {
sunscreen_cleaned_for_wordcloud %>%
dplyr::select(brandName, word)%>%
filter(brandName == i )%>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, colors=brewer.pal(8, "Spectral")))
}
library("sunscReen")
#sentiment with nrc: these are by products
sentiment_by_brand.2 <- sunscreen_cleaned_for_wordcloud %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
group_by(brandName, sentiment) %>%
count()
sunscreen <-
list.files(pattern = "*.csv") %>%
map_df(~read_csv(.))
sunscreen$review<-sunscreen$review%>%tolower()
sunscreen[c(2:5,7:8,14, 16:23)] <- lapply(sunscreen[c(2:5,7:8,14, 16:23)], factor)
levels(sunscreen$productName) <- c(
"Age Shield Sunblock SPF 45",
"Anthelios Ultra Light SPF 60" ,
"Anthelios XL, SPF 60+",
"Botanical Tinted Mineral SPF 50",
"Clear Face Break-Out SPF 30",
"RESIST Super-Light Daily SPF 30",
"Sunscreen Face Lotion SPF 50",
"Super City Block Oil-Free SPF 40",
"Super City Block SPF 25",
"Ultra Sheer Dry-Touch SPF 55",
"Ultra Sheer Dry-Touch SPF45",
"UV Aqua Rich Watery SPF50+"
)
brands<-levels(sunscreen$brandName)%>%tolower()%>%c()
productnames<-levels(sunscreen$productName%>%as.factor())%>%tolower()%>%c()
library(textstem)
sunscreen$review<-lemmatize_strings(sunscreen$review, dictionary=hash_lemmas)
sunscreen$review<-tolower(sunscreen$review)
sunscreen$brandName<-tolower(sunscreen$brandName)
sunscreen$productName<-tolower(sunscreen$productName)
my_stop_words <- tibble(word = c("#", "s", "ve", "re", "skin", "sunscreen", "product","spf", brands, productnames, "shield",
"sunscreen","sunscreens","t","it","It"))
sunscreen_nostopword <- sunscreen %>%
mutate(review2 = review) %>%
as.tibble() %>%
unnest_tokens(word, review)
sunscreen_cleaned <- sunscreen %>%
mutate(review2 = review) %>%
as.tibble() %>%
unnest_tokens(word, review) %>%
anti_join(stop_words, by = "word") %>%
anti_join(my_stop_words, by = "word") %>%
filter(is.na(as.numeric(word)))
#wordcloud
sunscreen_cleaned %>%
count(word) %>%
with(wordcloud(word, n, max.words = 50, colors=brewer.pal(8, "Spectral")))
#tf-idf
tf <- sunscreen_cleaned %>%
group_by(reviewId) %>%
count(word) %>%
ungroup()
tfidf<-tf%>%
tidytext::bind_tf_idf(word, reviewId, n )
readRDS(gzcon(("../data/sunscReen.rds")))
tfidf<-tf%>%
tidytext::bind_tf_idf(word, reviewId, n )
readRDS(gzcon(("../data/sunscReen.rds")))
View(tfidf)
tf <- sunscreen_cleaned %>%
group_by(brandName) %>%
count(word) %>%
ungroup()
tfidf_brand<-tf %>%
bind_tf_idf(word, brandName, n )
tf <- sunscreen_cleaned %>%
group_by(productName) %>%
count(word) %>%
ungroup()
tfidf_product<-tf %>%
bind_tf_idf(word, productName, n )
readRDS(gzcon(("../data/sunscReen.rds")))
require(quanteda)
crude.cp <-corpus(sunscreen%>%group_by(productId), docid_field = "brandName", text_field = "review")
summary(crude.cp)
crude.tk <- tokens(crude.cp, remove_numbers=TRUE, remove_punct=TRUE, remove_symbols=TRUE, remove_separators=TRUE)
for (i in c(1:length(sunscreen$review))){
sunscreen$sentiments[i]<-sentiment_by(sunscreen$review[i],hash_valence_shifters)
}
sunscreen$sentiments<-sunscreen$sentiments%>%as.numeric()
sentiment_valence_shifter<-sunscreen%>%group_by(brandName)%>%mutate(sentimentbybrand=mean(sentiment))
sentiment_valence_shifter<-sentiment_valence_shifter%>%group_by(productName)%>%mutate(sentimentbyproduct=mean(sentiment))
par(mfrow=c(3,3))
for (i in brands){
x<-sentiment_valence_shifter%>%filter(brandName==i)
#summary(x$sentiment)%>%print()
boxplot(x$sentiments)
}
for (i in productnames){
y<-sentiment_valence_shifter%>%filter(productName==i)
#summary(x$sentiment)%>%print()
boxplot(x$sentiments)
}
spf<-str_extract_all(sunscreen$productName, "\\d+")%>%
as.data.frame()%>%
t()
sunscreen<-cbind(sunscreen, spf)
#first word cloud to decide stop words
sunscreen_before_cleaning <- sunscreen %>%
mutate(review2 = review) %>%
as.tibble() %>%
unnest_tokens(word, review) %>%
filter(is.na(as.numeric(word)))
sunscreen_cleaned_for_wordcloud <- sunscreen %>%
dplyr::mutate(review2 = review) %>%
as.tibble() %>%
tidytext::unnest_tokens(word, review) %>%
dplyr::anti_join(stop_words, by = "word") %>%
dplyr::anti_join(my_stop_words, by = "word") %>%
dplyr::filter(is.na(as.numeric(word)))
par(mfrow=c(1,1))
#wordcloud
sunscreen_cleaned_for_wordcloud %>%
count(word) %>%
with(wordcloud(word, n, max.words = 20, colors=brewer.pal(8, "Spectral")))
sunscreen_cleaned_for_wordcloud <- sunscreen %>%
dplyr::mutate(review2 = review) %>%
dplyr::group_by(brandName)%>%
as.tibble() %>%
tidytext::unnest_tokens(word, review) %>%
anti_join(stop_words, by = "word") %>%
anti_join(my_stop_words, by = "word") %>%
dplyr::filter(is.na(as.numeric(word)))
par(mfrow=c(3,3))
for(i in brands) {
sunscreen_cleaned_for_wordcloud %>%
dplyr::select(brandName, word)%>%
filter(brandName == i )%>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, colors=brewer.pal(8, "Spectral")))
}
library("sunscReen")
#sentiment with nrc: these are by products
sentiment_by_brand.2 <- sunscreen_cleaned_for_wordcloud %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
group_by(brandName, sentiment) %>%
count()
sentiment_by_brand_sun<-sunscreen_cleaned_for_wordcloud%>%
inner_join(get_sunsentiments("sunscReen"), by="word")%>%
group_by(brandName, sentiment)%>%
count()
sentiment_by_brand_sun<-sunscreen_cleaned_for_wordcloud%>%
inner_join(get_sunsentiments("sunscReen"), by="word")%>%
group_by(brandName, sentiment)%>%
count()
library("sunscReen")
#sentiment with nrc: these are by products
sentiment_by_brand.2 <- sunscreen_cleaned_for_wordcloud %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
group_by(brandName, sentiment) %>%
count()
sentiment_by_brand_sun<-sunscreen_cleaned_for_wordcloud%>%
inner_join(get_sunsentiments("sunscReen"), by="word")%>%
group_by(brandName, sentiment)%>%
count()
remotes::install_github("rsefraou/sunscReen")
remotes::install_github("rsefraou/sunscReen", force=T)
library("sunscReen")
#sentiment with nrc: these are by products
sentiment_by_brand.2 <- sunscreen_cleaned_for_wordcloud %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
group_by(brandName, sentiment) %>%
count()
sentiment_by_brand_sun<-sunscreen_cleaned_for_wordcloud%>%
inner_join(get_sunsentiments("sunscReen"), by="word")%>%
group_by(brandName, sentiment)%>%
count()
sentiment_by_brand_sun<-sunscreen_cleaned_for_wordcloud%>%
inner_join(sunscReen::get_sunsentiments("sunscReen"), by="word")%>%
group_by(brandName, sentiment)%>%
count()
sentiment_by_brand_sun<-sunscreen_cleaned_for_wordcloud%>%
inner_join(sunscReen::get_sunsentiments("sunscReen"), by="word")%>%
group_by(brandName, sentiment)%>%
count()
View(sunscreen_cleaned_for_wordcloud)
library("sunscReen")
sunscReen::get_sunsentiments()
sunscReen::get_sunsentiments("sunscReen")
update.packages()
library("sunscReen")
sunscReen::get_sunsentiments("sunscReen")
install.packages("gifski")
library(gifski)
library("sunscReen")
#sentiment with nrc: these are by products
sentiment_by_brand.2 <- sunscreen_cleaned_for_wordcloud %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
group_by(brandName, sentiment) %>%
count()
sunscReen::get_sunsentiments("sunscReen")
setwd("~/Documents/GitHub/textmining/report")
library("sunscReen")
#sentiment with nrc: these are by products
sentiment_by_brand.2 <- sunscreen_cleaned_for_wordcloud %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
group_by(brandName, sentiment) %>%
count()
sunscReen::get_sunsentiments("sunscReen")
devtools::install_github("rsefraou/sunscReen")
devtools::install_github("rsefraou/sunscReen", force=T)
require(sunscReen)
sentiment_by_brand_sun<-sunscreen_cleaned_for_wordcloud%>%
inner_join(sunscReen::get_sunsentiments("sunscReen"), by="word")%>%
group_by(brandName, sentiment)%>%
count()
library(sunscReen)
sunscReen::get_sunsentiments("sunscReen")
View(sunscreen_cleaned_for_wordcloud)
sentiment_by_brand_sun<-sunscreen_cleaned_for_wordcloud%>%
inner_join(sunscReen::get_sunsentiments("sunscReen"), by="word")%>%
group_by(brandName, sentiment)%>%
count()
library(caret)
library(data.table)
library(ggforce)
library(ggplot2)
library(ggwordcloud)
library(kableExtra)
library(keras)
library(lexicon)
library(purrr)
library(quanteda)
library(RColorBrewer)
library(readr)
library(RSentiment)
library(rword2vec)
library(sentimentr)
library(sunscReen)
library(textstem)
library(text2vec)
library(tidytext)
library(tidyverse)
library(topicmodels)
library(wordcloud)
#Loading the data set. Make sure you are in the right working repository
setwd("../data")
sunscreen <-
list.files(pattern = "*.csv") %>%
map_df(~read_csv(.))
##lowercase
sunscreen$review<-sunscreen$review%>%tolower()
##factors
sunscreen[c(2:5,7:8,14, 16:23)] <- lapply(sunscreen[c(2:5,7:8,14, 16:23)], factor)
##renaming the levels
levels(sunscreen$productName) <- c(
"Age Shield Sunblock SPF 45",
"Anthelios Ultra Light SPF 60" ,
"Anthelios XL, SPF 60+",
"Botanical Tinted Mineral SPF 50",
"Clear Face Break-Out SPF 30",
"RESIST Super-Light Daily SPF 30",
"Sunscreen Face Lotion SPF 50",
"Super City Block Oil-Free SPF 40",
"Super City Block SPF 25",
"Ultra Sheer Dry-Touch SPF 55",
"Ultra Sheer Dry-Touch SPF45",
"UV Aqua Rich Watery SPF50+"
)
#vectors of brands and products that we will use
brands<-levels(sunscreen$brandName)%>%tolower()%>%c()
productnames<-levels(sunscreen$productName%>%as.factor())%>%tolower()%>%c()
#lemmatization based on dictionnary hash_lemmas
sunscreen$review<-lemmatize_strings(sunscreen$review, dictionary=hash_lemmas)
sunscreen$review<-tolower(sunscreen$review)
sunscreen$brandName<-tolower(sunscreen$brandName)
sunscreen$productName<-tolower(sunscreen$productName)
#We put as stopwords common english words as well as the names of the brands and products
my_stop_words <- c(word = c("#", "s", "ve", "re", "skin", "sunscreen", "product","spf", brands, productnames, "shield",
"sunscreen","sunscreens","t","it","It","use"), c(stopwords::stopwords("en")))%>%as_tibble()
my_stop_words$word<-my_stop_words$value
sunscreen_cleaned <- sunscreen %>%
mutate(review2 = review) %>%
as.tibble() %>%
unnest_tokens(word, review) %>%
anti_join(stop_words, by = "word") %>%
anti_join(my_stop_words, by = "word") %>%
filter(is.na(as.numeric(word)))
my_stop_words<-as_tibble(my_stop_words)
my_stop_words$word<-my_stop_words$value
sunscreen_cleaned_for_wordcloud <- sunscreen %>%
dplyr::mutate(review2 = review) %>%
dplyr::group_by(brandName)%>%
as.tibble() %>%
tidytext::unnest_tokens(word, review) %>%
anti_join(stop_words, by = "word") %>%
anti_join(my_stop_words, by = "word") %>%
dplyr::filter(is.na(as.numeric(word)))
setwd("~/Documents/GitHub/sunscReen/R")
n
sentiment_by_brand_sun<-sunscreen_cleaned_for_wordcloud %>%
inner_join(sunscReen::get_sunsentiments("sunscReen"), by="word") %>%
group_by(brandName, sentiment) %>%
count()
sentiment_normalized_perbrand_sun<-sentiment_by_brand_sun%>%
group_by(brandName)%>%
mutate(norm=n/sum(n))
View(sentiment_normalized_perbrand_sun)
sentiment_review<-sunscreen_cleaned_for_wordcloud %>%
inner_join(sunscReen::get_sunsentiments("sunscReen"), by="word") %>%
group_by(reviewId, sentiment) %>%
count()
View(sentiment_review)
levels(sentiment_review$sentiment)
positive<-c("comfort","joy","trust")
negative<-c("anger", "disgust","fear","sadness","discomfort")
sentiment_review<-sentiment_review%>%
mutate(sent<-ifelse(sentiment in postive, 1, 0 ))
sentiment_review<-sentiment_review%>%
mutate(sent<-ifelse(sentiment %in% postive, 1, 0 ))
sentiment_review<-sentiment_review%>%
mutate(sent<-ifelse(sentiment %in% positive, 1, 0 ))
positive<-c("comfort","joy","trust")
negative<-c("anger", "disgust","fear","sadness","discomfort")
sentiment_review<-sentiment_review%>%
mutate(sent<-ifelse(sentiment %in% positive, 1, 0 ))
View(sentiment_review)
sentiment_review<-sentiment_review%>%
mutate("sen"<-ifelse(sentiment %in% positive, 1, 0 ))
View(sentiment_review)
sentiment_review<-sentiment_review%>%
mutate("sen"<-ifelse(sentiment %in% positive, n, 0 ))
View(sentiment_review)
sentiment_review<-sunscreen_cleaned_for_wordcloud %>%
inner_join(sunscReen::get_sunsentiments("sunscReen"), by="word") %>%
group_by(reviewId, sentiment) %>%
count()
sentiment_review<-sentiment_review%>%
mutate(senplus=ifelse(sentiment %in% positive, n, 0 ))%>%
mutate(senmoins=ifelse(sentiment %in% negative, -n, 0 ))%>%
group_by(reviewId)%>%
summarize(difference=senplus+senmoins)
sentiment_review<-sentiment_review%>%
mutate(senplus=ifelse(sentiment %in% positive, n, 0 ))%>%
mutate(senmoins=ifelse(sentiment %in% negative, -n, 0 ))
sentiment_review<-sunscreen_cleaned_for_wordcloud %>%
inner_join(sunscReen::get_sunsentiments("sunscReen"), by="word") %>%
group_by(reviewId, sentiment) %>%
count()
sentiment_review<-sentiment_review%>%
mutate(senplus=ifelse(sentiment %in% positive, n, 0 ))%>%
mutate(senmoins=ifelse(sentiment %in% negative, -n, 0 ))%>%
mutate(diff=senplus+senmoins)
View(sentiment_review)
sentiment_per_text<-sentiment_review%>%select(reviewId, senmoins, senplus)%>%
group_by(reviewId)%>%
summarize(sentimenttext= senmoins+senplus)
sentiment_review<-sunscreen_cleaned_for_wordcloud %>%
inner_join(sunscReen::get_sunsentiments("sunscReen"), by="word") %>%
group_by(reviewId, sentiment) %>%
count()
sentiment_review<-sunscreen_cleaned_for_wordcloud %>%
inner_join(sunscReen::get_sunsentiments("sunscReen"), by="word") %>%
group_by(reviewId, sentiment) %>%
count()
levels(sentiment_review$sentiment)
positive<-c("comfort","joy","trust")
negative<-c("anger", "disgust","fear","sadness","discomfort")
sentiment_review<-sentiment_review%>%
mutate(senplus=ifelse(sentiment %in% positive, n, 0 ))%>%
mutate(senmoins=ifelse(sentiment %in% negative, -n, 0 ))
sentiment_per_text<-sentiment_review%>%select(reviewId, senmoins, senplus)%>%
group_by(reviewId)%>%
summarize(sentimenttext= sum(senmoins+senplus))
View(sentiment_per_text)
saveRDS(sentiment_per_text, file="../data")
setwd("~/Documents/GitHub/textmining/report")
saveRDS(sentiment_per_text, file="../data")
saveRDS(sentiment_per_text, file="../data/sentiment_per_text")
saveRDS(sentiment_per_text, file="../data/sentiment_per_text.rds")
saveRDS(sentiment_per_text, file="../data/sentiment_per_text.rdata")
load("/Users/rsefraou/Documents/GitHub/textmining/data/sentiment_per_text.rdata")
saveRDS(sentiment_per_text, file="../data/sentiment_per_text.RData")
load("/Users/rsefraou/Documents/GitHub/textmining/data/sentiment_per_text.rdata")
saveRDS(sentiment_per_text, file="../data/sentiment_per_text.RData")
load("/Users/rsefraou/Documents/GitHub/textmining/data/sentiment_per_text.RData")
mydata<-saveRDS(sentiment_per_text, file="../data/sentiment_per_text.RData")
load("/Users/rsefraou/Documents/GitHub/textmining/data/sentiment_per_text.RData")
shiny::runApp('~/Documents/GitHub/ptds_proj_group1/Shiny app/RedditAnalyzer')
install.packages("fontawesome")
remotes::install_github("rstudio/fontawesome")
runApp('~/Documents/GitHub/ptds_proj_group1/Shiny app/RedditAnalyzer')
install.packages("sparkline")
runApp('~/Documents/GitHub/ptds_proj_group1/Shiny app/RedditAnalyzer')
install.packages("tidygraph")
runApp('~/Documents/GitHub/ptds_proj_group1/Shiny app/RedditAnalyzer')
install.packages("timevis")
runApp('~/Documents/GitHub/ptds_proj_group1/Shiny app/RedditAnalyzer')
install.packages("wordcloud2")
runApp('~/Documents/GitHub/ptds_proj_group1/Shiny app/RedditAnalyzer')
plot_sentiment_page.2 <- function(p){
ggplot(sentiment_by_brand.2, aes(x = sentiment, y = n, fill = sentiment)) +
geom_bar(stat = "identity") +
ggforce::facet_wrap_paginate(facets = ~ sentiment, nrow = 3, ncol = 3, page = p) +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x = "", y = "Number of words", fill = "Sentiment")
}
plot_sentiment_pagenormalized.2 <- function(p){
ggplot(sentiment_normalized_perbrand, aes(x = sentiment, y = norm, fill = sentiment)) +
geom_bar(stat = "identity") +
ggforce::facet_wrap_paginate(facets = ~ brandName, nrow = 3, ncol = 3, page = p) +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x = "", y = "Number of words", fill = "Sentiment")
}
plot_sentiment_page.2(1)%>%plot()
plot_sentiment_page.2 <- function(p){
ggplot(sentiment_by_brand.2, aes(x = sentiment, y = n, fill = sentiment)) +
geom_bar(stat = "identity") +
ggforce::facet_wrap_paginate(facets = ~ sentiment, nrow = 3, ncol = 3, page = p) +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x = "", y = "Number of words", fill = "Sentiment")
}
plot_sentiment_page.2(1)%>%plot()
Q
